{"version":3,"file":"static/js/movies.db3bc02c.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","service/api-service.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: calc(-1 * 16px);\n  margin-bottom: calc(-1 * 32px);\n`;\n\nexport const Item = styled.li`\n  flex-basis: calc(100% / 3 - 16px);\n  margin-bottom: 52px;\n  margin-right: 16px;\n  max-width: 200px;\n\n  &:hover {\n    box-shadow: rgba(26, 7, 22, 0.267) 0px 2px 10px 0px;\n    border-radius: 5px;\n    transition-duration: $transition-time;\n    transition-timing-function: $cubic;\n    transform: scale(1.05);\n    cursor: pointer;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 5px;\n  object-fit: cover;\n`;\n\nexport const Title = styled.p`\n  margin: 8px 0;\n  color: #000;\n  font-size: 14px;\n  font-weight: 500;\n  text-transform: uppercase;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n`;\n\nexport const ItemLink = styled(Link)`\n  text-decoration: none;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { List, Item, Image, Title, ItemLink } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ id, title, original_name, poster_path }) => {\n        const poster = () => {\n          if (poster_path) {\n            return `https://image.tmdb.org/t/p/w500${poster_path}`;\n          } else {\n            return `https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQq_wGA4J08YoSd2-aTz9OQrZeSA2fnZxEbOA&usqp=CAU`;\n          }\n        };\n        return (\n          <Item key={id}>\n            <ItemLink to={`/movies/${id}`} state={{ from: location }}>\n              <Image src={poster()} alt={original_name} />\n              <Title>{title ?? original_name}</Title>\n            </ItemLink>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      original_name: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const Main = styled.div`\n  width: 1440px;\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Title = styled.h2`\n  text-transform: uppercase;\n  font-size: 32px;\n  font-weight: 600;\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  position: relative;\n  width: 380px;\n  margin: 30px auto;\n`;\n\nexport const Input = styled.input`\n  padding: 0 14px 4px 0;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 1.14;\n  display: flex;\n  align-items: center;\n\n  width: 380px;\n  height: 30px;\n\n  background-color: transparent;\n  outline-color: transparent;\n  border: none;\n  border-bottom: 1px solid #000;\n  color: #000;\n\n  outline: 0 none;\n  outline-offset: 0;\n  &:focus,\n  &:hover {\n    border: transparent;\n    border-bottom: 1px solid #ff6b08;\n  }\n  &::placeholder {\n    opacity: 1;\n  }\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  justify-content: end;\n  text-align: center;\n  width: 40px;\n  height: 40px;\n  right: -8px;\n  bottom: -4px;\n\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n\n  &:hover {\n    color: #000;\n    opacity: 1;\n  }\n`;\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { ImSearch } from 'react-icons/im';\nimport PropTypes from 'prop-types';\n\nimport { Form, Input, Button } from './SearchForm.styled';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [searchValue, setSearchValue] = useState('');\n\n  const hendelChange = evt => {\n    setSearchValue(evt.currentTarget.value);\n  };\n\n  const hendelSubmit = evt => {\n    evt.preventDefault();\n\n    if (searchValue.trim() === '') {\n      toast.warn('Sorry, you need to enter a movie title.');\n      return;\n    }\n\n    onSubmit(searchValue);\n    setSearchValue('');\n  };\n\n  return (\n    <Form onSubmit={hendelSubmit}>\n      <Input\n        type=\"text\"\n        placeholder=\"Search movie\"\n        value={searchValue}\n        onChange={hendelChange}\n      />\n      <Button type=\"submit\">\n        <ImSearch />\n      </Button>\n    </Form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport * as API from '../../service/api-service';\n\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Main } from '../Home/Home.styled';\n\nexport default function Movies() {\n  const [, setSearchValue] = useState('');\n  const [moviesByName, setMoviesByName] = useState([]);\n  const [SearchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(null);\n\n  const hendelSearchForm = searchValue => {\n    setSearchValue(searchValue);\n    setSearchParams({ query: searchValue });\n  };\n\n  useEffect(() => {\n    const value = SearchParams.get('query');\n    if (!value) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    API.fetchMoviesByName(value)\n      .then(({ data }) => {\n        setMoviesByName(data.results);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        toast.error(error.message);\n      });\n  }, [SearchParams]);\n\n  return (\n    <Main>\n      <SearchForm onSubmit={hendelSearchForm} />\n      {isLoading && <Loader />}\n\n      <MoviesList movies={moviesByName} />\n    </Main>\n  );\n}\n","import axios from \"axios\";\n\nconst API_KEY = '62788155badfe8d58c3d1f91f78357af';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = () => {\n    const response = axios.get(`/trending/all/day?api_key=${API_KEY}`)\n    return response;\n}\n\n//подивитися чи є український переклад фільмів = uk\nexport const fetchMoviesByName = (searchValue) => {\n    const response = axios.get(`/search/movie?api_key=${API_KEY}&query=${searchValue}&language=en-US&page=1&include_adult=false`)\n    return response;\n}\n\nexport const fetchMoviesById = (movieId) => {\n    const response = axios.get(`/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n    return response;\n}\n\nexport const fetchCast = (movieId) => {\n    const response = axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n    return response;\n}\n\nexport const fetchReviews = (movieId) => {\n    const response = axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`)\n    return response;\n}"],"names":["List","styled","Item","Image","Title","ItemLink","Link","MoviesList","movies","location","useLocation","map","id","title","original_name","poster_path","to","state","from","src","alt","Main","Form","Input","Button","SearchForm","onSubmit","useState","searchValue","setSearchValue","evt","preventDefault","trim","toast","type","placeholder","value","onChange","currentTarget","Movies","moviesByName","setMoviesByName","useSearchParams","SearchParams","setSearchParams","isLoading","setIsLoading","useEffect","get","API","then","data","results","catch","error","message","query","Loader","API_KEY","axios","fetchTrendingMovies","fetchMoviesByName","fetchMoviesById","movieId","fetchCast","fetchReviews"],"sourceRoot":""}