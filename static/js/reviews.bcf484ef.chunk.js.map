{"version":3,"file":"static/js/reviews.bcf484ef.chunk.js","mappings":"oQAEaA,EAAcC,EAAAA,GAAAA,GAAH,6CAIXC,EAAcD,EAAAA,GAAAA,GAAH,uNAUXE,EAAgBF,EAAAA,GAAAA,GAAH,sEAKbG,EAAcH,EAAAA,GAAAA,EAAH,mF,SCTT,SAASI,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAiBN,GACdO,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPJ,EAAWI,EAAKC,YAEjBC,OAAM,SAAAC,GACLC,EAAAA,GAAAA,MAAYD,EAAME,cAErB,CAACb,KAGF,8BACsB,IAAnBG,EAAQW,QACP,SAACpB,EAAD,UACGS,EAAQY,KAAI,SAAAC,GACX,OACE,UAACpB,EAAD,YACE,uBAAIoB,EAAOC,WACX,SAACpB,EAAD,UAAgBmB,EAAOE,WAFPF,EAAOG,UAQ/B,SAACrB,EAAD,2D,4KCtCFsB,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAsB,WAE/B,OADiBD,IAAAA,IAAA,oCAAuCD,KAK/CG,EAAoB,SAACC,GAE9B,OADiBH,IAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDI,EAApD,gDAIRC,EAAkB,SAACzB,GAE5B,OADiBqB,IAAAA,IAAA,iBAAoBrB,EAApB,oBAAuCoB,EAAvC,qBAIRM,EAAY,SAAC1B,GAEtB,OADiBqB,IAAAA,IAAA,iBAAoBrB,EAApB,4BAA+CoB,EAA/C,qBAIRO,EAAe,SAAC3B,GAEzB,OADiBqB,IAAAA,IAAA,iBAAoBrB,EAApB,4BAA+CoB,EAA/C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","service/api-service.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  list-style: none;\n`;\n\nexport const ReviewsItem = styled.li`\n  margin-bottom: 20px;\n  padding: 20px 30px;\n  box-shadow: rgba(26, 7, 22, 0.267) 0px 2px 10px 0px;\n  border-radius: 5px;\n  text-align: justify;\n  line-height: 1.5;\n  font-size: 16px;\n`;\n\nexport const ReviewsAuthor = styled.h4`\n  text-align: right;\n  margin-right: 100px;\n`;\n\nexport const ReviewsText = styled.p`\n  font-size: 24px;\n  font-style: italic;\n  color: #ccc;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport * as API from '../../service/api-service';\nimport {\n  ReviewsAuthor,\n  ReviewsItem,\n  ReviewsList,\n  ReviewsText,\n} from './Reviews.styled';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    API.fetchReviews(movieId)\n      .then(({ data }) => {\n        setReviews(data.results);\n      })\n      .catch(error => {\n        toast.error(error.message);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length !== 0 ? (\n        <ReviewsList>\n          {reviews.map(review => {\n            return (\n              <ReviewsItem key={review.id}>\n                <p>{review.content}</p>\n                <ReviewsAuthor>{review.author}</ReviewsAuthor>\n              </ReviewsItem>\n            );\n          })}\n        </ReviewsList>\n      ) : (\n        <ReviewsText>We don't have any reviews for this movie</ReviewsText>\n      )}\n    </>\n  );\n}\n","import axios from \"axios\";\n\nconst API_KEY = '62788155badfe8d58c3d1f91f78357af';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = () => {\n    const response = axios.get(`/trending/all/day?api_key=${API_KEY}`)\n    return response;\n}\n\n//подивитися чи є український переклад фільмів = uk\nexport const fetchMoviesByName = (searchValue) => {\n    const response = axios.get(`/search/movie?api_key=${API_KEY}&query=${searchValue}&language=en-US&page=1&include_adult=false`)\n    return response;\n}\n\nexport const fetchMoviesById = (movieId) => {\n    const response = axios.get(`/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n    return response;\n}\n\nexport const fetchCast = (movieId) => {\n    const response = axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n    return response;\n}\n\nexport const fetchReviews = (movieId) => {\n    const response = axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`)\n    return response;\n}"],"names":["ReviewsList","styled","ReviewsItem","ReviewsAuthor","ReviewsText","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","API","then","data","results","catch","error","toast","message","length","map","review","content","author","id","API_KEY","axios","fetchTrendingMovies","fetchMoviesByName","searchValue","fetchMoviesById","fetchCast","fetchReviews"],"sourceRoot":""}